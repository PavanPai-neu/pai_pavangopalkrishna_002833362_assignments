/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.StudentWorkAreas;

import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import jdk.jshell.execution.Util;
import model.student.Student;
import model.student.StudentDirectory;
import static model.student.StudentDirectory.usersList;

/**
 *
 * @author anirudh
 */
public class StudentAccountDetailsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StudentAccountDetailsJPanel
     */
    public StudentAccountDetailsJPanel() {
        initComponents();
        
        //Set all Userinfo fields to logged in user
        displayDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        lblTerm = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        dteDOB = new com.toedter.calendar.JDateChooser();
        lblDegree = new javax.swing.JLabel();
        pswPassword = new javax.swing.JPasswordField();
        lblPassword = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        lblDOB = new javax.swing.JLabel();
        lblDispEmail = new javax.swing.JLabel();
        lblDispUserName = new javax.swing.JLabel();
        lblStudentId = new javax.swing.JLabel();
        lblDispStudentId = new javax.swing.JLabel();
        txtDegree = new javax.swing.JTextField();
        txtTerm = new javax.swing.JTextField();

        lblTitle.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        lblTitle.setText("Account Details");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblTerm.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblTerm.setText("Term: ");

        lblName.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblName.setText("Name: ");

        lblEmail.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblEmail.setText("Email Id: ");

        lblDegree.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblDegree.setText("Degree: ");

        lblPassword.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblPassword.setText("Password: ");

        lblUserName.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblUserName.setText("Username: ");

        lblDOB.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblDOB.setText("Date Of Birth: ");

        lblStudentId.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblStudentId.setText("Student Id:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(414, 414, 414)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(lblName))
                            .addComponent(lblDOB, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDegree, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTerm, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblUserName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblEmail, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblStudentId, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblDispUserName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDispEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pswPassword)
                            .addComponent(dteDOB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtName)
                            .addComponent(lblDispStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDegree)
                            .addComponent(txtTerm)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblTitle)
                        .addGap(137, 137, 137))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnUpdate)
                        .addGap(152, 152, 152)))
                .addContainerGap(466, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(lblTitle)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblStudentId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDispStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDispEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dteDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDegree)
                            .addComponent(txtDegree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTerm)
                            .addComponent(txtTerm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblDOB))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDispUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pswPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPassword)))
                    .addComponent(lblUserName))
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addContainerGap(300, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        
        int inputPass = Student.hashPassword(String.valueOf(pswPassword.getPassword()));
        
        //Check if current password field is any different
        if (!String.valueOf(StudentDirectory.currentUser.getHashedpassw()).equals(String.valueOf(pswPassword.getPassword()))) {
            //Check if current entered password is equal to prev password
            if (StudentDirectory.currentUser.getPrevHashedPassw()==inputPass) {
                JOptionPane.showMessageDialog(this, "Cannot use previously used password!");
                pswPassword.setText(String.valueOf(StudentDirectory.currentUser.getHashedpassw()));
            } else {
                // If prev password is different. Update prev password to current and current to the
                // newly entered password.
                StudentDirectory.currentUser.setPrevHashedPassw(StudentDirectory.currentUser.getHashedpassw());         
                StudentDirectory.currentUser.setHashedpassw(inputPass);
                StudentDirectory.currentUser.setName(txtName.getText());
                StudentDirectory.currentUser.setDateOfBirth(dteDOB.getDate());
//                StudentDirectory.currentUser.setDegree((String) drpBoxDegree.getSelectedItem());
//                StudentDirectory.currentUser.setTerm((String) drpBoxTerm.getSelectedItem());

                JOptionPane.showMessageDialog(this, "User updated successfully!");
            }
        } else {
            StudentDirectory.currentUser.setName(txtName.getText());
            StudentDirectory.currentUser.setDateOfBirth(dteDOB.getDate());
//            StudentDirectory.currentUser.setDegree((String) drpBoxDegree.getSelectedItem());
//            StudentDirectory.currentUser.setTerm((String) drpBoxTerm.getSelectedItem());
            

            JOptionPane.showMessageDialog(this, "User updated successfully!");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

      public void displayDetails() {
          //method to set all fields to logged in user
        lblDispStudentId.setText(String.valueOf(StudentDirectory.currentUser.getStudentId()));
        lblDispUserName.setText(StudentDirectory.currentUser.getUsername());
        lblDispEmail.setText(StudentDirectory.currentUser.getEmail());
        txtName.setText(StudentDirectory.currentUser.getName());
        pswPassword.setText(String.valueOf(StudentDirectory.currentUser.getHashedpassw()));
        txtDegree.setText(StudentDirectory.currentUser.getDegree());
        txtTerm.setText(StudentDirectory.currentUser.getTerm());
        dteDOB.setDate(StudentDirectory.currentUser.getDateOfBirth());
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdate;
    private com.toedter.calendar.JDateChooser dteDOB;
    private javax.swing.JLabel lblDOB;
    private javax.swing.JLabel lblDegree;
    private javax.swing.JLabel lblDispEmail;
    private javax.swing.JLabel lblDispStudentId;
    private javax.swing.JLabel lblDispUserName;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblStudentId;
    private javax.swing.JLabel lblTerm;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JPasswordField pswPassword;
    private javax.swing.JTextField txtDegree;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtTerm;
    // End of variables declaration//GEN-END:variables
}
