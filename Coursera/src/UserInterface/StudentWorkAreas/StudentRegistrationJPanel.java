/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.StudentWorkAreas;

import Business.Person.Person;
import Business.Person.PersonDirectory;
import Main.ConfigureABusiness;
import UserInterface.StudentWorkAreas.StudentLoginJPanel;
import UserInterface.StudentWorkAreas.MainJFrame;
import com.toedter.calendar.JDateChooser;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import model.programs.Program;
import model.programs.ProgramDirectory;
import model.student.Student;
import model.student.StudentDirectory;
import static model.student.StudentDirectory.usersList;

/**
 *
 * @author anirudh
 */
public class StudentRegistrationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StudentDashboardJPanel
     */
    String selectedProgram;
    String selectedTerm;
    public StudentRegistrationJPanel() {
        
        initComponents();
        findDegrees();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        lblDOB = new javax.swing.JLabel();
        lblTerm = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        lblDegree = new javax.swing.JLabel();
        drpBoxDegree = new javax.swing.JComboBox<>();
        drpBoxTerm = new javax.swing.JComboBox<>();
        btnSignUp = new javax.swing.JButton();
        btnBackToLogin = new javax.swing.JButton();
        pswPassword = new javax.swing.JPasswordField();
        dteDOB = new com.toedter.calendar.JDateChooser();
        lblCnfPassword = new javax.swing.JLabel();
        pswCnfPassword = new javax.swing.JPasswordField();
        txtUserName = new javax.swing.JTextField();
        lblUserAlert = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();

        lblTitle.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        lblTitle.setText("Student Registration");

        lblPassword.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblPassword.setText("Password: ");

        lblUserName.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblUserName.setText("Username: ");

        lblDOB.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblDOB.setText("Date Of Birth: ");

        lblTerm.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblTerm.setText("Term: ");

        lblName.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblName.setText("Name: ");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        lblEmail.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblEmail.setText("Email Id: ");

        lblDegree.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblDegree.setText("Degree: ");

        drpBoxDegree.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bachelor's", "Master's", "Ph.D", " " }));
        drpBoxDegree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpBoxDegreeActionPerformed(evt);
            }
        });

        drpBoxTerm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fall", "Spring", "Summer" }));
        drpBoxTerm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drpBoxTermActionPerformed(evt);
            }
        });

        btnSignUp.setText("Sign up");
        btnSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignUpActionPerformed(evt);
            }
        });

        btnBackToLogin.setText("Back to login");
        btnBackToLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToLoginActionPerformed(evt);
            }
        });

        lblCnfPassword.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblCnfPassword.setText("Confirm Password:");

        pswCnfPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pswCnfPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(479, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(lblName))
                            .addComponent(lblCnfPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblUserName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTerm, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDegree, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDOB, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblEmail, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUserName)
                            .addComponent(pswPassword)
                            .addComponent(pswCnfPassword)
                            .addComponent(dteDOB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(drpBoxTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtName)
                            .addComponent(drpBoxDegree, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(156, 156, 156)
                                .addComponent(lblTitle))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(143, 143, 143)
                                .addComponent(btnSignUp)
                                .addGap(39, 39, 39)
                                .addComponent(btnBackToLogin)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(326, 326, 326)
                .addComponent(lblUserAlert)
                .addGap(221, 221, 221))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(306, 306, 306)
                        .addComponent(lblUserAlert))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(lblTitle)
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmail)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dteDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(drpBoxDegree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblDegree))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(drpBoxTerm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTerm))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblUserName))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pswPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPassword))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pswCnfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCnfPassword)))
                            .addComponent(lblDOB))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSignUp)
                            .addComponent(btnBackToLogin))))
                .addContainerGap(263, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnBackToLogin, btnSignUp});

        txtUserName.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                validate();
            }
            public void removeUpdate(DocumentEvent e) {
                validate();
            }
            public void insertUpdate(DocumentEvent e) {
                validate();
            }

            public void validate() {
                String enteredUsername = txtUserName.getText();
                for(model.student.Student user : usersList) {
                    if(user.getUsername().equals(enteredUsername)) {
                        // The username already exists in the list
                        // Provide feedback to the user, for instance:
                        //lblUserAlert.setText("Username Already exists!");
                        JOptionPane.showMessageDialog(null, "Username already exists!");
                        btnSignUp.setEnabled(false);
                        break;
                    }
                    else
                    btnSignUp.setEnabled(true);
                }
            }
        });
        txtEmail.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                validate();
            }
            public void removeUpdate(DocumentEvent e) {
                validate();
            }
            public void insertUpdate(DocumentEvent e) {
                validate();
            }

            public void validate() {
                String enteredEmail = txtEmail.getText();
                for(model.student.Student user : usersList) {
                    if(user.getEmail().equals(enteredEmail)) {
                        // The username already exists in the list
                        // Provide feedback to the user, for instance:
                        //lblUserAlert.setText("Username Already exists!");
                        JOptionPane.showMessageDialog(null, "Email already registered with another account!");
                        btnSignUp.setEnabled(false);
                        break;
                    }
                    else
                    btnSignUp.setEnabled(true);
                }
            }
        });
    }// </editor-fold>//GEN-END:initComponents


        public void findDegrees()
    {
        
        
        ArrayList <String> programNames = new ArrayList<>();
        for(Program program: ProgramDirectory.programDirectory)
        {
            programNames.add(program.getProgramName());
                    
        }
        drpBoxDegree.setModel(new DefaultComboBoxModel<String>(programNames.toArray(new String[0])));
//        findSections();
    }
    
    public void findTerm()
    {
        Program program = ProgramDirectory.findProgramByName(selectedProgram);
        ArrayList <String> term = new ArrayList<>();
        term.add(program.getTerm());
        drpBoxTerm.setModel(new DefaultComboBoxModel<String>(term.toArray(new String[0])));
            
    }
    
    private void btnBackToLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToLoginActionPerformed
        // TODO add your handling code here:
        StudentLoginJPanel panel = new StudentLoginJPanel();
        MainJFrame.changeScreen(panel);
    }//GEN-LAST:event_btnBackToLoginActionPerformed

    private void btnSignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignUpActionPerformed
        // TODO add your handling code here:
        String password = String.valueOf(pswPassword.getPassword());
        String password2 = String.valueOf(pswCnfPassword.getPassword());    
        
        //Hashing the input password                        
        int hashedPassword = Student.hashPassword(password);
        
        //Assigning variables to DOB, Degree and term.
        Date selectedDate = dteDOB.getDate();
        String degree = selectedProgram;
        String term = selectedTerm;
        
        //Validation for Password fields
        if(password.equals(password2)){
        //Storing all info in UserInfo Class
        Person person = PersonDirectory.newPerson(ConfigureABusiness.i++, txtName.getText(), "Not Created");
        Student newUser = new Student(person);
        person.setPersonStatus("Student");
        newUser.setDateOfBirth(selectedDate);
        newUser.setName(txtName.getText());
        newUser.setEmail(txtEmail.getText());
        newUser.setDegree(degree);
        newUser.setTerm(term);
        newUser.setUsername(txtUserName.getText());
        newUser.setPassw(String.valueOf(pswPassword.getPassword()));
        newUser.setHashedpassw(hashedPassword);
        newUser.setPrevHashedPassw(hashedPassword);
        newUser.setStudentId(usersList.size()+1);
        newUser.setProgramId(ProgramDirectory.findProgramByName(degree).getProgramId());
        
        // ... set all to usersList Array
        usersList.add(newUser);
        
        //Display Pane
        JOptionPane.showMessageDialog(this, "User has been registered!");
        
        //Set all text fields to blank after registeration
        txtName.setText("");
        txtEmail.setText("");
        txtUserName.setText("");
        pswCnfPassword.setText("");
        pswPassword.setText("");
        
        //System prints for reference
        System.out.println(selectedDate);
        System.out.println(newUser.getName());
        System.out.println(newUser.getEmail());
        System.out.println(newUser.getDegree());
        System.out.println(newUser.getTerm());
        System.out.println(newUser.getUsername());
        System.out.println(newUser.getPassw());
        System.out.println(newUser.getHashedpassw());
        System.out.println(newUser.getStudentId());         //Auto-Generated by system, not set by user
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Passwords do not Match!");
            pswCnfPassword.setText("");
            pswPassword.setText("");
        }
        
        
    }//GEN-LAST:event_btnSignUpActionPerformed

    private void pswCnfPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pswCnfPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pswCnfPasswordActionPerformed

    private void drpBoxDegreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpBoxDegreeActionPerformed
        // TODO add your handling code here:
        selectedProgram = drpBoxDegree.getSelectedItem().toString();
        findTerm();
    }//GEN-LAST:event_drpBoxDegreeActionPerformed

    private void drpBoxTermActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drpBoxTermActionPerformed
        // TODO add your handling code here:
        selectedTerm = drpBoxTerm.getSelectedItem().toString();
    }//GEN-LAST:event_drpBoxTermActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackToLogin;
    private javax.swing.JButton btnSignUp;
    private javax.swing.JComboBox<String> drpBoxDegree;
    private javax.swing.JComboBox<String> drpBoxTerm;
    private com.toedter.calendar.JDateChooser dteDOB;
    private javax.swing.JLabel lblCnfPassword;
    private javax.swing.JLabel lblDOB;
    private javax.swing.JLabel lblDegree;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblTerm;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUserAlert;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JPasswordField pswCnfPassword;
    private javax.swing.JPasswordField pswPassword;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
