/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.FacultyWorkAreas;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.courses.Assignment;
import model.courses.AssignmentDirectory;
import model.courses.Course;
import model.courses.CourseDirectory;
import model.courses.Schedule;
import model.courses.ScheduleDirectory;
import model.professors.ProfessorDirectory;

/**
 *
 * @author anirudh
 */
public class FacultyAssignmentListJPanel extends javax.swing.JPanel {

    /**
     * Creates new form FacultyAssignmentListJPanel
     */
    int selectedRow;
    public FacultyAssignmentListJPanel() {
        initComponents();
        populateFacultyAssignmentsTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAssignments = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        tblAssignments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Assignment ID", "Course ID", "Section", "Due By", "Total points", "No of submissions"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAssignments);

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel1.setText("Assignments List");

        jButton1.setText("Create Assignment");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update Assignment");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete Assignment");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("View Assignment");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(257, 257, 257)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 818, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(568, 568, 568)
                        .addComponent(jLabel1)))
                .addContainerGap(245, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(32, 32, 32)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(356, 356, 356))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(jLabel1)
                .addGap(73, 73, 73)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(240, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

        public void populateFacultyAssignmentsTable()
    {
      ArrayList <Schedule> professorSchedule = ScheduleDirectory.findScheduleForProfessor((ProfessorDirectory.currentProfessor).getProfessorId());
      ArrayList <Assignment> assignmentListForprofessor = AssignmentDirectory.findAssignmentForProfessor(professorSchedule);
//      ArrayList <Assignment> assignmentListForCourse = AssignmentDirectory.findAssignmentForCourse(course.getCourseId(), assignmentListForprofessor);
      DefaultTableModel model = (DefaultTableModel) tblAssignments.getModel();
        model.setRowCount(0);
        
        
        for(Assignment assignment : assignmentListForprofessor)
        {
            Object[] row = new Object[6];
            row[0] = assignment.getAssignmentId();
            String section="";
            for(Schedule schedule: professorSchedule)
            {
                if(assignment.getScheduleId() == schedule.getScheduleId())
                {
                    section = schedule.getSection();
                }
            }
            row[1] = assignment.getCourseId();
            row[2] = section;          
            row[3] = assignment.getDueDate();
            row[4] = assignment.getTotalMarks();
            row[5] = "";
            model.addRow(row);  
            
        }        
    }
    
    
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        FacultyDirectAssignmentJPanel panel = new FacultyDirectAssignmentJPanel();
        FacultyDashboardJPanel.jSplitPane1.setRightComponent(panel);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblAssignments.getSelectedRow();
        if(selectedRow >= 0)
        {

            {   
                System.out.println(selectedRow);
                Assignment assignment = AssignmentDirectory.findAssignment((Integer)tblAssignments.getValueAt(selectedRow, 0));
                System.out.println((Integer)tblAssignments.getValueAt(selectedRow, 0));
                FacultyDirectUpdateAssignmentJPanel panel = new FacultyDirectUpdateAssignmentJPanel(assignment);
                FacultyDashboardJPanel.jSplitPane1.setRightComponent(panel);
                
            }
            
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Please select an assignment to update");
        }         
     
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tblAssignments.getSelectedRow();
        if(selectedRow >= 0)
        {

            {   
                System.out.println(selectedRow);
                Assignment assignment = AssignmentDirectory.findAssignment((Integer)tblAssignments.getValueAt(selectedRow, 0));
                System.out.println((Integer)tblAssignments.getValueAt(selectedRow, 0));
                FacultyDirectViewAssignmentJPanel panel = new FacultyDirectViewAssignmentJPanel(assignment);
                FacultyDashboardJPanel.jSplitPane1.setRightComponent(panel);
                
            }
            
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Please select a course to view");
        }         
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblAssignments.getSelectedRow();
        if(selectedRow >= 0)
        {

            {   
                System.out.println(selectedRow);
                Assignment assignment = AssignmentDirectory.findAssignment((Integer)tblAssignments.getValueAt(selectedRow, 0));
                System.out.println((Integer)tblAssignments.getValueAt(selectedRow, 0));
                AssignmentDirectory.removeAssignmentDirectly(assignment);
                JOptionPane.showMessageDialog(this, "Assignment deleted successfully");
                populateFacultyAssignmentsTable();
                
            }
            
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Please select a course to view");
        } 
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAssignments;
    // End of variables declaration//GEN-END:variables
}
